import difflib,textwrap,sys
from parse_string import parse_text_into_list_of_seqs

def joinseqswithoverlap(seqs, limit=30):
    while len(seqs)>1:
        b=seqs.pop()
        a=seqs.pop()
        s = difflib.SequenceMatcher(None, a.lower(), b.lower())
        m = s.find_longest_match(0,len(a),0,len(b))        
        if m.size<limit:
            sys.exit("overlap between sequences is lower than "+str(limit))
        seqs.append(a[:m.a]+b[m.b:])
    return seqs[0]

def LCSubstr_set(S, T):
 m = len(S)
 n = len(T)
 L = [[0] * (n+1) for i in xrange(m+1)]
 LCS = set()
 longest = 0
 for i in xrange(m):
     for j in xrange(n):
         if S[i] == T[j]:
             v = L[i][j] + 1
             L[i+1][j+1] = v
             if v > longest:
                 longest = v
                 LCS = set()
             if v == longest:
                 if type(S)==list:
                     LCS.add( tuple(S[i-v+1:i+1]) )
                 else:
                     LCS.add( S[i-v+1:i+1] )
 return LCS
 
def LongestCommonSubstring(S1, S2):
    M = [[0]*(1+len(S2)) for i in xrange(1+len(S1))]
    longest, x_longest = 0, 0
    for x in xrange(1,1+len(S1)):
        for y in xrange(1,1+len(S2)):
            if S1[x-1] == S2[y-1]:
                M[x][y] = M[x-1][y-1] + 1
                if M[x][y]>longest:
                    longest = M[x][y]
                    x_longest  = x
            else:
                M[x][y] = 0
    return x_longest-longest, longest  #S1[x_longest-longest: x_longest]

def LongestCommonSubstrings(S1, S2):
    M = [[0]*(1+len(S2)) for i in xrange(1+len(S1))]
    longest, x_longest = 0, 0
    for x in xrange(1,1+len(S1)):
        for y in xrange(1,1+len(S2)):
            if S1[x-1] == S2[y-1]:
                M[x][y] = M[x-1][y-1] + 1
                if M[x][y]>longest:
                    longest = M[x][y]
                    x_longest  = x
            else:
                M[x][y] = 0
    return x_longest-longest, longest  #S1[x_longest-longest: x_longest]


print LongestCommonSubstring('''aaaaaaaagggg''','''gggggccccccccccgggg''')

if __name__=="__maein__":    
    print
    print "================= c ====================="
    print
    
    text = textwrap.dedent('''                           
    >pRHT373
    GACGAAAGGGCCTCGTGATACGCCTATTTTTATAGGTTAATGTCATGATAATAATGGTTTCTTAGGACGGATCGCTTGCCTGTAACTTACACGCGCCTCGTATCTTTTAATGATGGAATAATTTGGGAATTTACTCTGTGTTTATTTATTTTTATGTTTTGTATTTGGATTTTAGAAAGTAAATAAAGAAGGTAGAAGAGTTACGGAATGAAGAAAAAAAAATAAACAAAGGTTTAAAAAATTTCAACAAAAAGCGTACTTTACATATATATTTATTAGACAAGAAAAGCAGATTAAATAGATATACATTCGATTAACGATAAGTAAAATGTAAAATCACAGGATTTTCGTGTGTGGTCTTCTACACAGACAAGATGAAACAATTCGGCATTAATACCTGAGAGCAGGAAGAGCAAGATAAAAGGTAGTATTTGTTGGCGATCCCCCTAGAGTCTTTTACATCTTCGGAAAACAAAAACTATTTTTTCTTTAATTTCTTTTTTTACTTTCTATTTTTAATTTATATATTTATATTAAAAAATTTAAATTATAATTATTTTTATAGCACGTGATGAAAAGGACCCAGGTGGCACTTTTCGGGGAAATGTGCGCGGAACCCCTATTTGTTTATTTTTCTAAATACATTCAAATATGTATCCGCTCATGAGACAATAACCCTGATAAATGCTTCAATAATATTGAAAAAGGAAGAGTATGAGTATTCAACATTTCCGTGTCGCCCTTATTCCCTTTTTTGCGGCATTTTGCCTTCCTGTTTTTGCTCACCCAGAAACGCTGGTGAAAGTAAAAGATGCTGAAGATCAGTTGGGTGCACGAGTGGGTTACATCGAACTGGATCTCAACAGCGGTAAGATCCTTGAGAGTTTTCGCCCCGAAGAACGTTTTCCAATGATGAGCACTTTTAAAGTTCTGCTATGTGGCGCGGTATTATCCCGTATTGACGCCGGGCAAGAGCAACTCGGTCGCCGCATACACTATTCTCAGAATGACTTGGTTGAGTACTCACCAGTCACAGAAAAGCATCTTACGGATGGCATGACAGTAAGAGAATTATGCAGTGCTGCCATAACCATGAGTGATAACACTGCGGCCAACTTACTTCTGACAACGATCGGAGGACCGAAGGAGCTAACCGCTTTTTTGCACAACATGGGGGATCATGTAACTCGCCTTGATCGTTGGGAACCGGAGCTGAATGAAGCCATACCAAACGACGAGCGTGACACCACGATGCCTGTAGCAATGGCAACAACGTTGCGCAAACTATTAACTGGCGAACTACTTACTCTAGCTTCCCGGCAACAATTAATAGACTGGATGGAGGCGGATAAAGTTGCAGGACCACTTCTGCGCTCGGCCCTTCCGGCTGGCTGGTTTATTGCTGATAAATCTGGAGCCGGTGAGCGTGGGTCTCGCGGTATCATTGCAGCACTGGGGCCAGATGGTAAGCCCTCCCGTATCGTAGTTATCTACACGACGGGGAGTCAGGCAACTATGGATGAACGAAATAGACAGATCGCTGAGATAGGTGCCTCACTGATTAAGCATTGGTAACTGTCAGACCAAGTTTACTCATATATACTTTAGATTGATTTAAAACTTCATTTTTAATTTAAAAGGATCTAGGTGAAGATCCTTTTTGATAATCTCATGACCAAAATCCCTTAACGTGAGTTTTCGTTCCACTGAGCGTCAGACCCCGTAGAAAAGATCAAAGGATCTTCTTGAGATCCTTTTTTTCTGCGCGTAATCTGCTGCTTGCAAACAAAAAAACCACCGCTACCAGCGGTGGTTTGTTTGCCGGATCAAGAGCTACCAACTCTTTTTCCGAAGGTAACTGGCTTCAGCAGAGCGCAGATACCAAATACTGTCCTTCTAGTGTAGCCGTAGTTAGGCCACCACTTCAAGAACTCTGTAGCACCGCCTACATACCTCGCTCTGCTAATCCTGTTACCAGTGGCTGCTGCCAGTGGCGATAAGTCGTGTCTTACCGGGTTGGACTCAAGACGATAGTTACCGGATAAGGCGCAGCGGTCGGGCTGAACGGGGGGTTCGTGCACACAGCCCAGCTTGGAGCGAACGACCTACACCGAACTGAGATACCTACAGCGTGAGCTATGAGAAAGCGCCACGCTTCCCGAAGGGAGAAAGGCGGACAGGTATCCGGTAAGCGGCAGGGTCGGAACAGGAGAGCGCACGAGGGAGCTTCCAGGGGGAAACGCCTGGTATCTTTATAGTCCTGTCGGGTTTCGCCACCTCTGACTTGAGCGTCGATTTTTGTGATGCTCGTCAGGGGGGCGGAGCCTATGGAAAAACGCCAGCAACGCGGCCTTTTTACGGTTCCTGGCCTTTTGCTGGCCTTTTGCTCACATGTTCTTTCCTGCGTTATCCCCTGATTCTGTGGATAACCGTATTACCGCCTTTGAGTGAGCTGATACCGCTCGCCGCAGCCGAACGACCGAGCGCAGCGAGTCAGTGAGCGAGGAAGCGGAAGAGCGCCCAATACGCAAACCGCCTCTCCCCGCGCGTTGGCCGATTCATTAATGCAGCTGGCACGACAGGTTTCCCGACTGGAAAGCGGGCAGTGAGCGCAACGCAATTAATGTGAGTTACCTCACTCATTAGGCACCCCAGGCTTTACACTTTATGCTTCCGGCTCCTATGTTGTGTGGAATTGTGAGCGGATAACAATTTCACACAGGAAACAGCTATGACCATGATTACGCCAAGCGCGCAATTAACCCTCACTAAAGGGAACAAAAGCTGGAGCTCTTGAAGTACGGATTAGAAGCCGCCGAGCGGGCGACAGCCCTCCGACGGAAGACTCTCCTCCGTGCGTCCTCGTCTTCACCGGTCGCGTTCCTGAAACGCAGATGTGCCTCGCGCCGCACTGCTCCGAACAATAAAGATTCTACAATACTAGCTTTTATGGTTATGAAGAGGAAAAATTGGCAGTAACCTGGCCCCACAAACCTTCAAATTAACGAATCAAATTAACAACCATAGGATGATAATGCGATTAGTTTTTTAGCCTTATTTCTGGGGTAATTAATCAGCGAAGCGATGATTTTTGATCTATTAACAGATATATAAATGGAAAAGCTGCATAACCACTTTAACTAATACTTTCAACATTTTCAGTTTGTATTACTTCTTATTCAAATGTCATAAAAGTATCAACAAAAAATTGTTAATATACCTCTATACTTTAACGTCAAGGAGAAAAAACTATATCTAGAACTAGTGGATCCATGTCGTCGTCAATTACAGATGAGAAAATATCTGGTGAACAGCAACAACCTGCTGGCAGAAAACTATACTATAACACAAGTACATTTGCAGAGCCTCCTCTAGTGGACGGAGAAGGTAACCCTATAAATTATGAGCCGGAAGTTTACAACCCGGATCACGAAAAGCTATACCATAACCCATCACTGCCTGCACAATCAATTCAGGATACAAGAGATGATGAATTGCTGGAAAGAGTTTATAGCCAGGATCAAGGTGTAGAGTATGAGGAAGATGAAGAGGATAAGCCAAACCTAAGCGCTGCGTCCATTAAAAGTTATGCTTTAACGAGATTTACGTCCTTACTGCACATCCACGAGTTTTCTTGGGAGAATGTCAATCCCATACCCGAACTGCGCAAAATGACATGGCAGAATTGGAACTATTTTTTTATGGGTTATTTTGCGTGGTTGTCTGCGGCTTGGGCCTTCTTTTGCGTTTCAGTATCAGTCGCTCCATTGGCTGAACTATATGACAGACCAACCAAGGACATCACCTGGGGGTTGGGATTGGTGTTATTTGTTCGTTCAGCAGGTGCTGTCATATTTGGTTTATGGACAGATAAGTCTTCCAGAAAGTGGCCGTACATTACATGTTTGTTCTTATTTGTCATTGCACAACTCTGTACTCCATGGTGTGACACATACGAGAAATTTCTGGGCGTAAGGTGGATAACCGGTATTGCTATGGGAGGAATTTACGGATGTGCTTCTGCAACAGCGATTGAAGATGCACCTGTGAAAGCACGTTCGTTCCTATCAGGTCTATTTTTTTCTGCTTACGCTATGGGGTTCATATTTGCTATCATTTTTTACAGAGCCTTTGGCTACTTTAGGGATGATGGCTGGAAAATATTGTTTTGGTTTAGTATTTTTCTACCAATTCTACTAATTTTCTGGAGATTGTTATGGCCTGAAACGAAATACTTCACCAAGGTTTTGAAAGCCCGTAAATTAATATTGAGTGACGCAGTGAAAGCTAATGGTGGCGAGCCTCTACCAAAAGCCAACTTTAAACAAAAGATGGTATCCATGAAGAGAACAGTTCAAAAGTACTGGTTGTTGTTCGCATATTTGGTTGTTTTATTGGTGGGTCCAAATTACTTGACTCATGCTTCTCAAGACTTGTTGCCAACCATGCTGCGTGCCCAATTAGGCCTATCCAAGGATGCTGTCACTGTCATTGTAGTGGTTACCAACATCGGTGCTATTTGTGGGGGTATGATATTTGGACAGTTCATGGAAGTTACTGGAAGAAGATTAGGCCTATTGATTGCATGCACAATGGGTGGTTGCTTCACCTACCCTGCATTTATGTTGAGAAGCGAAAAGGCTATATTAGGTGCCGGTTTCATGTTATATTTTTGTGTCTTTGGTGTCTGGGGTATCCTGCCCATTCACCTTGCAGAGTTGGCCCCTGCTGATGCAAGGGCTTTGGTTGCCGGTTTATCTTACCAGCTAGGTAATCTAGCTTCTGCAGCGGCTTCCACGATTGAGACACAGTTAGCTGATAGATACCCATTAGAAAGAGATGCCTCTGGTGCTGTGATTAAAGAAGATTATGCCAAAGTTATGGCTATCTTGACTGGTTCTGTTTTCATCTTCACATTTGCTTGTGTTTTTGTTGGCCATGAGAAATTCCATCGTGATTTGTCCTCTCCTGTTATGAAGAAATATATAAACCAAGTGGAAGAATACGAAGCCGATGGTCTTTCGATTAGTGACATTGTTGAACAAAAGACGGAATGTGCTTCAGTGAAGATGATTGATTCGAACGTCTCAAAGACATATGAGGAGCATATTGAGACCGTTGAATTCGATATCAAGCTTGTCGACATGAGTAAAGGAGAAGAACTTTTCACTGGAGTTGTCCCAATTCTTGTTGAATTAGATGGTGATGTTAATGGGCACAAATTTTCTGTCAGTGGAGAGGGTGAAGGTGATGCAACATACGGAAAACTTACCCTTAAATTTATTTGCACTACTGGAAAACTACCTGTTCCATGGCCAACACTTGTCACTACTTTCACTTATGGTGTTCAATGCTTTTCAAGATACCCAGATCATATGAAACGGCATGACTTTTTCAAGAGTGCCATGCCCGAAGGTTATGTACAGGAAAGAACTATATTTTTCAAAGATGACGGGAACTACAAGACACGTGCTGAAGTCAAGTTTGAAGGTGATACCCTTGTTAATAGAATCGAGTTAAAAGGTATTGATTTTAAAGAAGATGGAAACATTCTTGGACACAAATTGGAATACAACTATAACTCACACAATGTATACATCATGGCAGACAAACAAAAGAATGGAATCAAAGTTAACTTCAAAATTAGACACAACATTGAAGATGGAAGCGTTCAACTAGCAGACCATTATCAACAAAATACTCCAATTGGCGATGGCCCTGTCCTTTTACCAGACAACCATTACCTGTCCACACAATCTGCCCTTTCGAAAGATCCCAACGAAAAGAGAGACCACATGGTCCTTCTTGAGTTTGTAACAGCTGCTGGGATTACACATGGCATGGATGAACTATACAAACACCATCACCATCACCATTAGCTCGAGTCATGTAATTAGTTATGTCACGCTTACATTCACGCCCTCCCCCCACATCCGCTCTAACCGAAAAGGAAGGAGTTAGACAACCTGAAGTCTAGGTCCCTATTTATTTTTTTATAGTTATGTTAGTATTAAGAACGTTATTTATATTTCAAATTTTTCTTTTTTTTCTGTACAGACGCGTGTACGCATGTAACATTATACTGAAAACCTTGCTTGAGAAGGTTTTGGGACGCTCGAAGGCTTTAATTTGCGGCCGGTACCCAATTCGCCCTATAGTGAGTCGTATTACGCGCGCTCACTGGCCGTCGTTTTACAACGTCGTGACTGGGAAAACCCTGGCGTTACCCAACTTAATCGCCTTGCAGCACATCCCCCTTTCGCCAGCTGGCGTAATAGCGAAGAGGCCCGCACCGATCGCCCTTCCCAACAGTTGCGCAGCCTGAATGGCGAATGGCGCGACGCGCCCTGTAGCGGCGCATTAAGCGCGGCGGGTGTGGTGGTTACGCGCAGCGTGACCGCTACACTTGCCAGCGCCCTAGCGCCCGCTCCTTTCGCTTTCTTCCCTTCCTTTCTCGCCACGTTCGCCGGCTTTCCCCGTCAAGCTCTAAATCGGGGGCTCCCTTTAGGGTTCCGATTTAGTGCTTTACGGCACCTCGACCCCAAAAAACTTGATTAGGGTGATGGTTCACGTAGTGGGCCATCGCCCTGATAGACGGTTTTTCGCCCTTTGACGTTGGAGTCCACGTTCTTTAATAGTGGACTCTTGTTCCAAACTGGAACAACACTCAACCCTATCTCGGTCTATTCTTTTGATTTATAAGGGATTTTGCCGATTTCGGCCTATTGGTTAAAAAATGAGCTGATTTAACAAAAATTTAACGCGAATTTTAACAAAATATTAACGTTTACAATTTCCTGATGCGGTATTTTCTCCTTACGCATCTGTGCGGTATTTCACACCGCATAGGGTAATAACTGATATAATTAAATTGAAGCTCTAATTTGTGAGTTTAGTATACATGCATTTACTTATAATACAGTTTTTTAGTTTTGCTGGCCGCATCTTCTCAAATATGCTTCCCAGCCTGCTTTTCTGTAACGTTCACCCTCTACCTTAGCATCCCTTCCCTTTGCAAATAGTCCTCTTCCAACAATAATAATGTCAGATCCTGTAGAGACCACATCATCCACGGTTCTATACTGTTGACCCAATGCGTCTCCCTTGTCATCTAAACCCACACCGGGTGTCATAATCAACCAATCGTAACCTTCATCTCTTCCACCCATGTCTCTTTGAGCAATAAAGCCGATAACAAAATCTTTGTCGCTCTTCGCAATGTCAACAGTACCCTTAGTATATTCTCCAGTAGATAGGGAGCCCTTGCATGACAATTCTGCTAACATCAAAAGGCCTCTAGGTTCCTTTGTTACTTCTTCTGCCGCCTGCTTCAAACCGCTAACAATACCTGGGCCCACCACACCGTGTGCATTCGTAATGTCTGCCCATTCTGCTATTCTGTATACACCCGCAGAGTACTGCAATTTGACTGTATTACCAATGTCAGCAAATTTTCTGTCTTCGAAGAGTAAAAAATTGTACTTGGCGGATAATGCCTTTAGCGGCTTAACTGTGCCCTCCATGGAAAAATCAGTCAAGATATCCACATGTGTTTTTAGTAAACAAATTTTGGGACCTAATGCTTCAACTAACTCCAGTAATTCCTTGGTGGTACGAACATCCAATGAAGCACACAAGTTTGTTTGCTTTTCGTGCATGATATTAAATAGCTTGGCAGCAACAGGACTAGGATGAGTAGCAGCACGTTCCTTATATGTAGCTTTCGACATGATTTATCTTCGTTTCCTGCAGGTTTTTGTTCTGTGCAGTTGGGTTAAGAATACTGGGCAATTTCATGTTTCTTCAACACTACATATGCGTATATATACCAATCTAAGTCTGTGCTCCTTCCTTCGTTCTTCCTTCTGTTCGGAGATTACCGAATCAAAAAAATTTCAAAGAAACCGAAATCAAAAAAAAGAATAAAAAAAAAATGATGAATTGAATTGAAAAGCTGTGGTATGGTGCACTCTCAGTACAATCTGCTCTGATGCCGCATAGTTAAGCCAGCCCCGACACCCGCCAACACCCGCTGACGCGCCCTGACGGGCTTGTCTGCTCCCGGCATCCGCTTACAGACAAGCTGTGACCGTCTCCGGGAGCTGCATGTGTCAGAGGTTTTCACCGTCATCACCGAAACGCGCGA
    ''')
    seqlist =  [a.record.seq for a in parse_text_into_list_of_seqs(text)]
    pRHT373 = seqlist[0]
    
    from Bio.Restriction import EcoRI

    vectorfragments = EcoRI.catalyse(pRHT373)
    
    text = textwrap.dedent(''' 
    >PCR_product_(249_bp)_primers_FCT-JEN1-FUR4_and_RCT-JEN1-FUR4
    TTGACTGGTTCTGTTTTCATCTTCACATTTGCTTGTGTTTTTGTTgggtgccctgttaacaacattataaAGGACAAGGGCTGGTTCCAAAGATGGGCCAATGTCGATGATTTTGAAGAAGAGTGGAAAGACACAATTGAGAGGGATGACCTGGTAGATGACAATATTAGTGTCTACGAAcacgaacacgaaaagactttcattGAATTCGATATCAAGCTTGTCGACATGAGTAAAGGAGAAGAACTT
    ''')
    seqlist =  [a.record for a in parse_text_into_list_of_seqs(text)]

    for insert in seqlist:
        print ">"+insert.name
        print joinseqswithoverlap([vectorfragments[0],insert.seq,vectorfragments[1]])
        print
    

    

    
    
    
